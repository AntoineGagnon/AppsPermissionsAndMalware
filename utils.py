import hashlib
import os
import subprocess
import time
from subprocess import run

import pandas
import requests


def get_virustotal_resource(apk_path):
    params = {'apikey': 'be5b53dc8a285795baa16bd0f3eff496d94586e55e99f1aaf64111d21703154e'}
    apk_file = open(apk_path, 'rb')
    files = {'file': (apk_path, apk_file)}
    sha1 = hashlib.sha1()
    sha1.update(apk_file.read())
    sha1_checksum = sha1.hexdigest()
    vt_data = get_virustotal_data(sha1_checksum)
    status_code = 404
    if not vt_data:
        while status_code != 200:
            response = requests.post('https://www.virustotal.com/vtapi/v2/file/scan', files=files, params=params)
            status_code = response.status_code
            if status_code == 204:
                time.sleep(15)
        json_response = response.json()
        return json_response["resource"], False
    else:
        return sha1_checksum, vt_data


def get_virustotal_data(resource):
    import requests
    status_code = 404

    params = {'apikey': 'be5b53dc8a285795baa16bd0f3eff496d94586e55e99f1aaf64111d21703154e', 'resource': resource}
    while status_code != 200:
        request_response = requests.post('https://www.virustotal.com/vtapi/v2/file/report',
                                         params=params)
        status_code = request_response.status_code
        if status_code == 204:
            time.sleep(15)

    json_response = request_response.json()

    if json_response["response_code"] == 1:
        scans_data = json_response["scans"]
        total_scans = 0
        true_scans = 0
        for scan in scans_data:
            total_scans += 1
            if scans_data[scan]["detected"]:
                true_scans += 1
        return true_scans, total_scans
    else:
        return 0


def get_permissions_from_apk(apk_path):
    if os.name == 'nt':
        bash_path = 'C:\\Program Files\\Git\\bin\\bash.exe'

        apkanalyzer_path = 'C:\\Users\\Antoine\\AppData\\Local\\Android\\Sdk\\tools\\bin\\apkanalyzer'

        result = run([bash_path, '-l',
                      apkanalyzer_path,
                      '-h', 'manifest', 'permissions', apk_path], capture_output=True)
    else:
        apkanalyzer_path = '/home/skynti/Android/Sdk/tools/bin/apkanalyzer'
        result = run([apkanalyzer_path, '-h', 'manifest', 'permissions', apk_path], shell=True, stdout=subprocess.PIPE)

    perm_data = pandas.read_json("permission_data.json")

    permissions = []
    output_lines = result.stdout.decode('utf-8').splitlines()
    for perm in output_lines:
        if perm in perm_data:
            permissions.append({"permission": perm_data[perm]["label"], "description": perm_data[perm]["description"]})
    return permissions
